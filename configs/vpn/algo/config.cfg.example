---

users:
  - user1
  - user2
  - user3

ssh_port: 4160
ipsec_enabled: false
wireguard_enabled: true
wireguard_port: 51820
alternative_ingress_ip: false
reduce_mtu: 0
adblock_lists:
 - "https://raw.githubusercontent.com/StevenBlack/hosts/master/hosts"
dns_encryption: true
BetweenClients_DROP: false
block_smb: false
block_netbios: false
unattended_reboot:
  enabled: true
  time: 06:00

### Advanced users only below this line ###

dnscrypt_servers:
  ipv4:
    - cloudflare
  ipv6:
    - cloudflare-ipv6

# DNS servers which will be used if 'dns_encryption' is 'false'.
# The default is to use Cloudflare.
dns_servers:
  ipv4:
    - 1.1.1.1
    - 1.0.0.1
  ipv6:
    - 2606:4700:4700::1111
    - 2606:4700:4700::1001

# Store the PKI in a ram disk. Enabled only if store_pki (retain the PKI) is set to false
# Supports on MacOS and Linux only (including Windows Subsystem for Linux)
pki_in_tmpfs: true

# Set this to 'true' when running './algo update-users' if you want ALL users to get new certs, not just new users.
keys_clean_all: false

# StrongSwan log level
# https://wiki.strongswan.org/projects/strongswan/wiki/LoggerConfiguration
strongswan_log_level: 2

# rightsourceip for ipsec
# ipv4
strongswan_network: 10.19.48.0/24
# ipv6
strongswan_network_ipv6: '2001:db8:4160::/48'

# If you're behind NAT or a firewall and you want to receive incoming connections long after network traffic has gone silent.
# This option will keep the "connection" open in the eyes of NAT.
# See: https://www.wireguard.com/quickstart/#nat-and-firewall-traversal-persistence
wireguard_PersistentKeepalive: 0

# WireGuard network configuration
wireguard_network_ipv4: 10.19.49.0/24
wireguard_network_ipv6: 2001:db8:a160::/48

# Randomly generated IP address for the local dns resolver
local_service_ip: "{{ '172.16.0.1' | ipmath(1048573 | random(seed=algo_server_name + ansible_fqdn)) }}"
local_service_ipv6: "{{ 'fd00::1' | ipmath(1048573 | random(seed=algo_server_name + ansible_fqdn)) }}"


congrats:
  common: |
    "#                          Congratulations!                            #"
    "#                     Your Algo server is running.                     #"
    "#    Config files and certificates are in the ./configs/ directory.    #"
    "#              Go to https://whoer.net/ after connecting               #"
    "#        and ensure that all your traffic passes through the VPN.      #"
    "#                     Local DNS resolver {{ local_service_ip }}{{ ', ' + local_service_ipv6 if ipv6_support else '' }}                   #"
  p12_pass: |
    "#        The p12 and SSH keys password for new users is {{ p12_export_password }}       #"
  ca_key_pass: |
    "#        The CA key password is {{ CA_password|default(omit) }}       #"
  ssh_access: |
    "#      Shell access: ssh -F configs/{{ ansible_ssh_host|default(omit) }}/ssh_config {{ algo_server_name }}        #"

SSH_keys:
  comment: algo@ssh
  private: configs/algo.pem
  private_tmp: /tmp/algo-ssh.pem
  public: configs/algo.pem.pub

cloud_providers:
  azure:
    size: Standard_B1S
    image:
      publisher: Canonical
      offer: 0001-com-ubuntu-server-focal-daily
      sku: 20_04-daily-lts
      version: latest
  digitalocean:
    size: s-1vcpu-1gb
    image: "ubuntu-20-04-x64"
  ec2:
    # Change the encrypted flag to "false" to disable AWS volume encryption.
    encrypted: true
    # Set use_existing_eip to "true" if you want to use a pre-allocated Elastic IP
    # Additional prompt will be raised to determine which IP to use
    use_existing_eip: false
    size: t2.micro
    image:
      name: "ubuntu-focal-20.04"
      owner: "099720109477"
  gce:
    size: f1-micro
    image: ubuntu-2004-lts
    external_static_ip: false
  lightsail:
    size: nano_2_0
    image: ubuntu_20_04
  scaleway:
    size: DEV1-S
    image: Ubuntu 20.04 Focal Fossa
    arch: x86_64
  hetzner:
    server_type: cx11
    image: ubuntu-20.04
  openstack:
    flavor_ram: ">=512"
    image:  Ubuntu-18.04
  cloudstack:
    size: Micro
    image: Linux Ubuntu 20.04 LTS 64-bit
    disk: 10
  vultr:
    os: Ubuntu 20.04 x64
    size: 1024 MB RAM,25 GB SSD,1.00 TB BW
  linode:
    type: g6-nanode-1
    image: linode/ubuntu20.04
  local:

fail_hint:
  - Sorry, but something went wrong!
  - Please check the troubleshooting guide.
  - https://trailofbits.github.io/algo/troubleshooting.html

booleans_map:
  Y: true
  y: true
